// Copyright 2019-present Open Networking Foundation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package atomix.protocols.log;

option java_package = "io.atomix.protocols.log.protocol";
option java_outer_classname = "LogProto";
option java_multiple_files = true;

message AppendRequest {
    bytes value = 1;
}

message AppendResponse {
    ResponseStatus status = 1;
    int64 index = 2;
}

message ConsumeRequest {
    string member_id = 1;
    int64 consumer_id = 2;
    int64 index = 3;
}

message ConsumeResponse {
    LogRecord record = 1;
    bool reset = 2;
}

message BackupRequest {
    string leader = 1;
    int64 term = 2;
    int64 index = 3;
    repeated BackupOperation operations = 5;
}

message BackupResponse {
    ResponseStatus status = 1;
}

message LogRecord {
    int64 index = 1;
    int64 timestamp = 2;
    bytes value = 3;
}

message ResetRequest {
    string member_id = 1;
    int64 consumer_id = 2;
    int64 index = 3;
}

message ResetResponse {
}

message BackupOperation {
    int64 index = 1;
    int64 term = 2;
    int64 timestamp = 3;
    bytes value = 4;
}

enum ResponseStatus {
    OK = 0;
    ERROR = 1;
}

service DistributedLogService {

    rpc Append (AppendRequest) returns (AppendResponse) {}

    rpc Consume (ConsumeRequest) returns (ConsumeResponse) {}

    rpc Backup (BackupRequest) returns (BackupResponse) {}

    rpc Reset(ResetRequest) returns (ResetResponse) {}

}
